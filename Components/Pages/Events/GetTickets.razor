@page "/events/get-tickets/{id}";

<PageTitle>Iv's - Get Your Tickets</PageTitle>

<MudContainer Fixed="true" MaxWidth="MaxWidth.Medium" Style="background-color:white">
    
    @if (!_getEventprocessing)
    {
        <MudSkeleton Height="42px;" />
        <MudSkeleton Height="42px;" />
        <MudSkeleton Height="42px;" />
    }
    else
    {

        <MudPaper Elevation="0" Style="padding:10px">

            <div class="image-container">
                <img src="@_events.eventImagePath" alt="@_events.eventName" style="width:100%; height:auto; max-height:600px">
                <div class="image-centered">
                    <div>
                        <span id="event-title">@_events.eventName</span>
                    </div>
                </div>
            </div>

            <br /><br />

           

            <MudGrid>
                <MudItem xs="12" sm="12" md="9" lg="9">

                    <h1>About this event </h1>

                    <br />

                    <div style="line-height:35px; font-size:16px">
                        <span>@_events.eventDescription</span>
                    </div>

                    <br />
                </MudItem>

                <MudItem xs="12" sm="12" md="3" lg="3">
                    <div style="text-align:center">
                        <MudImage Src="@_events.qrCodeLink"></MudImage>
                        <br />
                        <p>Scan or share this event</p>
                    </div>
                </MudItem>
            </MudGrid>

                    <br /><br />

                    <div>

                        <h1>Location </h1>

                        <br />

                <div> @_events.eventAddress -- @_events.eventState</div>
                        
                        <br />

                        @if (!string.IsNullOrEmpty(_events.adressPin))
                        {
                            <MudButton Href="@_events.adressPin"
                                       Target="_blank"
                                       Variant="Variant.Outlined"
                                       EndIcon="@Icons.Material.Filled.LocationOn"
                                       Color="Color.Secondary"
                                       Style="text-transform:none">
                                Google address pin link
                            </MudButton>
                            <br />
                        }
                    </div>

                    <br /><br />


                <h1>Event Times </h1>

                        <br />

                        <MudExpansionPanels DisableBorders="true" MultiExpansion="true" Elevation="0">
                            <MudGrid>
                            @foreach (var t in _events.EventTime)
                            {
                                <MudItem xs="12" sm="12" md="6" lg="6" xl="6" xxl="6">
                            <MudExpansionPanel IsExpanded="true" Text="@Convert.ToDateTime(t.startDateAndTime).ToString("dddd, dd MMMM yyyy")">
                                <div style="padding:10px; border:1px dashed #f0baf9">
                                    <MudText Typo="Typo.body2">Starts At : <b>@Convert.ToDateTime(t.startDateAndTime).ToString("dddd, dd MMMM yyyy, HH:mm tt")</b> </MudText>
                                    <br />
                                    <MudText Typo="Typo.body2">Ends At : <b>@Convert.ToDateTime(t.endDateAndTime).ToString("dddd, dd MMMM yyyy, HH:mm tt")</b> </MudText>
                                </div>
                            </MudExpansionPanel>
                                </MudItem>
                                
                            }
                    </MudGrid>
                        </MudExpansionPanels>

                        <br /><br />


           <h1>Social Links</h1>

            <br />

            <div>

                @if (!string.IsNullOrWhiteSpace(_events.webLink))
                {
                    <div>
                        Visit us on
                        <MudElement HtmlTag="a" Class="ms-1" Style="color:lightsalmon;font-weight:bold;" href="@_events.webLink" target="blank" rel="noopener noreferrer">
                            @_events.webLink
                        </MudElement>
                    </div>
                    <br />
                }

                @if (!string.IsNullOrWhiteSpace(_events.instagramLink))
                {
                    <div>
                        Visit us on
                        <MudElement HtmlTag="a" Class="ms-1" Style="color:hotpink;font-weight:bold;" href="@_events.instagramLink" target="blank" rel="noopener noreferrer">
                            @_events.instagramLink
                        </MudElement>
                    </div>
                    <br />
                }

                @if (!string.IsNullOrWhiteSpace(_events.facebookLink))
                {
                    <div>
                        Visit us on
                        <MudElement HtmlTag="a" Class="ms-1" Style="color:blue;font-weight:bold;" href="@_events.facebookLink" target="blank" rel="noopener noreferrer">
                            @_events.facebookLink
                        </MudElement>
                    </div>
                    <br />
                }

                @if (!string.IsNullOrWhiteSpace(_events.twitterLink))
                {
                    <div>
                        Visit us on
                        <MudElement HtmlTag="a" Class="ms-1" Style="color:black;font-weight:bold;" href="@_events.twitterLink" target="blank" rel="noopener noreferrer">
                            @_events.twitterLink
                        </MudElement>
                    </div>
                    <br />
                }


            </div>

                

                    <br /><br />

                    <div>
                        <MudText Typo="Typo.body1"><b>Event Tickets</b></MudText>

                        <br />

                        <MudExpansionPanels DisableBorders="true" Elevation="0">
                            @foreach (var t in _events.Tickets)
                            {
                                <MudExpansionPanel Text="@t.ticketName">
                                    <div style="padding:10px; border:1px dashed #f9c7ba; line-height:30px;">
                                        <div><b>Ticket Kind : </b><span>@t.ticketKind</span></div>
                                        <div><b>Ticket Name : </b><span>@t.ticketName</span></div>
                                        <div><b>Ticket Price : </b><span>@t.ticketAmount.numberDecimal.ToString("N0")</span></div>
                                        <div><b>Ticket in stock : </b><span>@t.ticketInStock</span></div>
                                        <div><b>Group Size : </b><span>@t.groupSize</span></div>
                                        <div><b>Ticket start date : </b><span>@Convert.ToDateTime(t.ticketSalesStartDateAndTime).ToString("dddd, dd MMMM yyyy, HH:mm tt")</span></div>
                                        <div><b>Ticket end date : </b><span>@Convert.ToDateTime(t.ticketSalesEndDateAndTime).ToString("dddd, dd MMMM yyyy, HH:mm tt")</span></div>
                                    </div>
                                </MudExpansionPanel>
                                <br />
                            }
                        </MudExpansionPanels>


                    </div>

                    <br /><br />

                  
           

        </MudPaper>
    }

</MudContainer>



@code {
    [Parameter] public string? id { get; set; }
    [Inject] IEventService _eventService { get; set; }
    [Inject] NavigationManager? _navigate { get; set; }
    [Inject] ISnackbar? _snackbar { get; set; }

    GetEventDetailsDto _events = new GetEventDetailsDto();

    private bool _getEventprocessing { get; set; } = false;


    protected async override void OnInitialized()
    {
        _getEventprocessing = false;
        var res = await _eventService.GetEventDetails(id);
        if (res.result.code == ResponseCodes.ResponseCodeOk)
        {
            _events = res.result.data;
        }
        else
        {
            _snackbar.Add(res.result.message, Severity.Error);
        }

        _getEventprocessing = true;
        StateHasChanged();
    }

   
}
