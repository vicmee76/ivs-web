@page "/events/dashboard"

<PageTitle>Iv's - Dashboard</PageTitle>


<AuthorizeView Roles="User,Admin">
    <NotAuthorized>
        No Access
    </NotAuthorized>
    <Authorized>

        <br />
        <MudContainer Fixed="true" MaxWidth="MaxWidth.Large">

            <MudPaper Elevation="0">
                <MudToolBar>

                    @if (_processing)
                    {
                        <MudSkeleton Height="42px" Width="200px" />
                    }
                    else
                    {
                        @if (fullname != null)
                        {
                            <MudText><b style="color:#56375C">Hi, @fullname</b></MudText>
                        }
                    }
                    <MudSpacer />
                    <MudBreadcrumbs Items="_items" Style="font-size:small; font-weight:bold;" Separator=">"></MudBreadcrumbs>
                </MudToolBar>
            </MudPaper>

            <br />

            <MudCard Elevation="0" Style="padding:20px">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6"><b>Dashboard</b></MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.AddCircle" Size="Size.Medium" Href="/events/create-event" Color="Color.Secondary">Create Event</MudButton>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>

                    <br />

                    @if (_processing)
                    {
                        <MudSkeleton Height="42px;" />
                        <MudSkeleton Height="42px;" />
                        <MudSkeleton Height="42px;" />
                    }
                    else
                    {
                        @if (_eventsDto.Any())
                        {
                            <MudGrid>
                                @foreach (var item in _eventsDto)
                                {
                                    var activateUrl = $"/events/activate-event/{item._id}";

                                    <MudItem xs="12" sm="12" md="6" lg="3">
                                        <MudCard>
                                            <MudCardHeader>
                                                <CardHeaderAvatar>
                                                    <MudAvatar Color="Color.Secondary">@item.eventName[0]</MudAvatar>
                                                    </CardHeaderAvatar>
                                                    <CardHeaderContent>
                                                        <MudText Typo="Typo.body2"><b>@item.eventName</b></MudText>
                                                    <MudText Typo="Typo.body1">@item.eventOption event</MudText>
                                                </CardHeaderContent>
                                                <CardHeaderActions>
                                                    <MudMenu Icon="@Icons.Material.Filled.Settings" Color="Color.Default">
                                                        <MudMenuItem>View</MudMenuItem>
                                                        @if (item.status.ToLower() == "pending")
                                                        {
                                                            <MudMenuItem>Edit</MudMenuItem>
                                                            <MudMenuItem>Delete</MudMenuItem>
                                                        }
                                                        else
                                                        {

                                                        }
                                                    </MudMenu>
                                                </CardHeaderActions>
                                            </MudCardHeader>

                                            @if (string.IsNullOrEmpty(item.eventImageData))
                                            {
                                                <MudCardMedia Image="images/backgrounds/abstract.jpg" Height="200" />
                                            }
                                            else
                                            {
                                                <MudCardMedia Image="@item.eventImageData" Height="200" />
                                            }

                                            <MudCardContent>
                                                <MudText Typo="Typo.body2">@item.eventAddress</MudText>
                                                </MudCardContent>

                                                <MudCardActions>
                                                    <MudIconButton Icon="@Icons.Material.Filled.Share" Title="Share" Color="Color.Default" />

                                                @if (item.status.ToLower() == "pending")
                                                {
                                                    <MudChip Variant="Variant.Text" Color="Color.Warning"><b>Not published</b></MudChip>
                                                }
                                                else
                                                {
                                                    <MudChip Variant="Variant.Text" Color="Color.Success"><b>Published</b></MudChip>
                                                }

                                                <MudSpacer></MudSpacer>


                                                @if (item.status.ToLower() == "pending")
                                                {
                                                    <MudIconButton Href="@activateUrl" Icon="@Icons.Material.TwoTone.KeyboardDoubleArrowRight" Title="Publish event" Size="Size.Large" Color="Color.Secondary" />
                                                }
                                                else
                                                {
                                                    <MudIconButton Icon="@Icons.Material.Filled.ArrowCircleRight" Title="View event" Size="Size.Large" Color="Color.Secondary" />
                                                }

                                                

                                            </MudCardActions>
                                        </MudCard>
                                    </MudItem>
                                }
                            </MudGrid>
                        }
                        else
                        {
                            <div style="text-align:center;">


                                <MudImage Src="images/backgrounds/no-data.png" Alt="No data image" Elevation="0" Height="130" Class="rounded-lg" />

                                <br />

                                <MudText Typo="Typo.h5"> <b>You haven't created an event yet!</b></MudText>
                                <br>
                                <MudText> Once you create an event you will be able to visualize and track them.</MudText>
                            </div>
                        }
                    }

                </MudCardContent>
            </MudCard>

        </MudContainer>
    </Authorized>
</AuthorizeView>

@code {

    [Inject] AuthenticationStateProvider _authStateProvider { get; set; }
    [Inject] IEventService _eventService { get; set; }
    [Inject] NavigationManager? _navigate { get; set; }

    IEnumerable<GetEventByUserDto> _eventsDto = new List<GetEventByUserDto>();

    AuthUser authUser = new AuthUser();

    private string fullname { get; set; }
    private string userId { get; set; }
   

    private bool _processing { get; set; } = false;

    protected async override void OnInitialized()
    {
        _processing = true;
        var state = await _authStateProvider.GetAuthenticationStateAsync();

        if (!state.User.Identity.IsAuthenticated)
        {
            _navigate.NavigateTo("/accounts/login");
        }
        else
        {
            

            var auth = await authUser.GetAuthUserAsync(state);
            userId = auth.Id;
            fullname = auth.SentenceCaseFullName;

            var res2 = await _eventService.GetEventByUser(userId);
            _eventsDto = res2.result.data ?? new List<GetEventByUserDto>();
        }
        _processing = false;
        StateHasChanged();
    }

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Events", href: "#"),
        new BreadcrumbItem("Dashboard", href: null, disabled: true)
    };

}
