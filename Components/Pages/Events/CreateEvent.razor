@page "/events/create-event"



<PageTitle>Iv's - Create New Event</PageTitle>



<br />
<AuthorizeView>
    <NotAuthorized>
        No Access 
    </NotAuthorized>

    <Authorized>
        <MudContainer Fixed="true" MaxWidth="MaxWidth.Large">

            <MudPaper Elevation="0">
                <MudToolBar>

                    <MudText><b style="color:#56375C">Create New Event</b></MudText>

                    <MudSpacer />
                    <MudBreadcrumbs Items="_items" Style="font-size:small; font-weight:bold;" Separator=">"></MudBreadcrumbs>
                </MudToolBar>
            </MudPaper>

            <br />

            <MudCard Elevation="0">
                <MudCardHeader>
                    <CardHeaderContent>

                    </CardHeaderContent>
                    <CardHeaderActions>

                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>


                  


                </MudCardContent>
            </MudCard>

        </MudContainer>
    </Authorized>
</AuthorizeView>




@code {

    [Inject] AuthenticationStateProvider _authStateProvider { get; set; }
    [Inject] IEventTypeService _eventTypeService { get; set; }
    [Inject] NavigationManager? _navigate { get; set; }

    AuthUser authUser = new AuthUser();
    IEnumerable<GetEventTypesDto> _eventTypes = new List<GetEventTypesDto>();
    private string userId { get; set; }

    protected async override void OnInitialized()
    {
        var state = await _authStateProvider.GetAuthenticationStateAsync();

        if (!state.User.Identity.IsAuthenticated)
        {
            _navigate.NavigateTo("/accounts/login");
        }
        else
        {
            var auth = await authUser.GetAuthUserAsync(state);
            userId = auth.Id;

            var res = await _eventTypeService.GetEventTypes();
            _eventTypes = res.result.data ?? new List<GetEventTypesDto>();
        }
        StateHasChanged();
    }

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Dashboard", href: "/events/dashboard"),
        new BreadcrumbItem("Create Event", href: null, disabled: true)
    };
}
